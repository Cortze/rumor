# Trim aggresively, for testing purposes
# Low-water peer count excludes protected peers
alice: host start --lo-peers=1 --peer-grace-period=100ms

# start 3 other hosts
bob: host start
charlie: host start
dave: host start

bob: host notify all
charlie: host notify all
dave: host notify all

alice: host listen --ip=127.0.0.1 --tcp=9001
bob: host listen --ip=127.0.0.1 --tcp=9002
charlie: host listen --ip=127.0.0.1 --tcp=9003
dave: host listen --ip=127.0.0.1 --tcp=9004

_alice_view alice: host view
_bob_view bob: host view

bob: peer connect $_alice_view_addr
charlie: peer connect $_alice_view_addr
dave: peer connect $_alice_view_addr

# Wait for grace period to pass
sleep 4s

alice: peer protect $_bob_view_peer_id my_important_peer

alice: peer trim 10s

alice: peer list

# We expect to be trimmed to two peers, since low-water is 1, and we protected a peer.
let peercount=${#__peers[@]}
echo "Alice has $peercount peers"
(($peercount == 2))

if [[ " ${__peers[@]} " =~ " $_bob_view_peer_id " ]]; then
  echo "Alice kept Bob around"
else
  echo "Oh no, alice trimmed connection to Bob!"
  false
fi

alice: kill
bob: kill
charlie: kill
dave: kill
